<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 마지막 mapping.xml 파일	
	여기에 지금까지 했던 모든 내용을 다 집어넣겠다.
	resultMap, sql모듈화, 동적쿼리, a select, all select, insert, delete, update-->
<!-- SQL definition -->
<mapper namespace="UserMapper10">
	<resultMap type="user" id="UserSelectRm">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
		<result property="age" column="age" />
		<result property="grade" column="garde" />
		<result property="regDate" column="reg_date" />
	</resultMap>
	<!-- sql 문의 모듈화  -->
	<sql id="select-users">
		select
		user_id, user_name, password,age,reg_date
		from users
	</sql>
	<sql id="orderby-userid-desc">
	order by user_id desc
	</sql>
	<!-- insert, delete, update 추가적으로 기입... -->
	<insert id="addUser" parameterType="user">
		insert
		into
		users(user_id,user_name,password,age,grade,reg_date)
		values(
		#{userId},
		#{userName},
		#{password},
		#{age},
		#{grade},
		#{regDate}
		)
	</insert>
	<update id="updateUser" parameterType="user">
		update users
		set
		user_name=#{userName}
		where user_id=#{userId}
	</update>
	<delete id="removeUser" parameterType="string">
		delete
		from users
		where user_id=#{value}
	</delete>
	
	<!-- 정적쿼리 -->
	<select id="getUserList01" parameterType="user" resultMap="UserSelectRm">
		<include refid="select-users"/>
		where password=#{password}
	</select>
	<!-- 특정한 id를 가지는 사람 검색 -->
	<select id="getUser" parameterType="string" resultMap="UserSelectRm">
		<include refid="select-users"/>
		where user_id=#{value}
	</select>
	<!-- 동적쿼리 -->
	<select id="getUserList" parameterType="user" resultMap="UserSelectRm">
	<include refid="select-users"/>
		<where>
			<if test="userName !=null">
				user_name like #{userName}
			</if>
			<if test="age !=null">
			 	or age like #{age}
			</if>
		</where>
		<include refid="orderby-userid-desc"/>
	</select>
</mapper>