<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 1. 테이블 컬럼명과 필드명이 다를 때 ResultMap 사용법을 알아야한다. select문에서만 당연히 사용된다. Camelspace 
	규칙을 따르지 않는 필드일때 반드시 사용 2. 동적쿼리 사용법 -->
<!-- SQL definition -->
<mapper namespace="UserMapper07">
	<resultMap type="user" id="UserSelectRm">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
		<result property="age" column="age" />
		<result property="grade" column="garde" />
		<result property="regDate" column="reg_date" />
	</resultMap>
	<!--패스워드가 USER객체의 USER01인 사람을 겂개 -->
	<!-- 정적 쿼리...where절 조건이 달라지면 새로운 쿼리를산들래  -->
	<select id="getUserList01" parameterType="user"
		resultMap="UserSelectRm">
		select
		user_id, user_name, password,age,reg_date
		from users
		where password=#{password}
	</select>
	<!-- 동적쿼리
			where절 조건이 달라져도 하나의 select쿼리문으로 모든 쿼리문을 실행할 수 있다.
			userName이 홍길동이고 age가 30살인 사람을 검색..
			where userName='홍길동'and age=30 (1
			where userName='홍길동' (2
			where age=30      (3
			모든 사람 검색 (4
			
			
			select문 하나로 위 (1~(4의 모든 쿼리문이 실행될 수 있다... 동적인 조건에 따라서 다르게 동작
			-->
			
	<select id="getUserList" parameterType="user" resultMap="UserSelectRm">
		select
		user_id, user_name, password,age,reg_date
		from users
		<where>
			<if test="userName !=null">
				user_name like #{userName}
			</if>
			<if test="age !=null">
			 	or age like #{age}
			</if>
		</where>
		order by user_id desc
	</select>
</mapper>