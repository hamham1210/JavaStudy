package com.web.spring;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.web.spring.entity.Custom;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.EntityTransaction;

//Spring Framework에서 빈으로 제공되는 것들을 사용하기 위해서는 CommandLineRunner!!상속 받아서 쓰기
@SpringBootApplication
public class Boot04JpaApplication implements CommandLineRunner{

	@Autowired
	EntityManagerFactory entityManagerFactory;
	@Override
	public void run(String... args)  {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		EntityTransaction transaction= entityManager.getTransaction();
		try {
			transaction.begin();
			/*
			저장 ..persist
			Custom c= new Custom();
			c.setName("김종각2");
			c.setPassword("4321");
			c.setEmail("kim@google.com");
			entityManager.persist(c);
			*/
			//검색
			/*
			 * Custom find1 = entityManager.find(Custom.class,1);
			 * System.out.println("1번에 해당하는 정보 :"+find1);
			 */
			//삭제..delete
			/*
			 * Custom delete = entityManager.find(Custom.class, 3);
			 * entityManager.remove(delete);
			 */
			 Custom find2 = entityManager.find(Custom.class, 2);
			System.out.println("2번에 해당하는 정보 :"+ find2);
			 Custom find22 = entityManager.find(Custom.class, 2);
			 if(find2==find22) System.out.println("동일한 객체입니다.~~!!");
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
		}finally {
			entityManager.close();
		}
		
	}
	
	public static void main(String[] args) {
		SpringApplication.run(Boot04JpaApplication.class, args);
	}



}
